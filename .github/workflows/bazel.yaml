name: Bazel build

env:
  HOMEBREW_NO_AUTO_UPDATE: 1
  # typically used for bazel internal testing: changes outputRoot, sets idletimeout to ~15s
  TEST_TMPDIR: /tmp/bazel

# yamllint disable-line rule:truthy
on:
  pull_request:
    types:
      - opened
      - reopened
  push:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4.2.2
        # action runners have bazelisk: - uses: bazelbuild/setup-bazelisk@v2
        # https://github.com/bazelbuild/bazel/issues/11062
      - run: mkdir -p "${TEST_TMPDIR}"
      -
        name: Canonicalize Parameters
        id: params
        if: ${{ steps.release.outputs.release_created }}
        run: |
          echo "::set-output name=semver::$(echo ${{ steps.release.outputs.tag_name }} | sed -e 's/^v//g')"
          echo "::set-output name=name::$(echo ${GITHUB_REPOSITORY} | cut -d / -f 2)"
          echo "::set-output name=prefix::$(echo ${{ env.GITHUB_REPOSITORY }} | cut -d / -f 2)-${{ steps.release.outputs.tag_name }}"
          echo "::set-output name=tag_name::${{ steps.release.outputs.tag_name }}"
          env | sort
      - name: Mount bazel cache  # Optional
        uses: actions/cache@v4
        with:
          # needs to be an absolute path, not a variable; I've made it match TEST_TMPDIR above
          path: /tmp/bazel
          key: _bazel_runner
      - run: bazel run //docs:collate_docs
      - run: bazel build //...
      - run: bazel test //...
      - name: Build / Test examples to ensure functionality
        run: |
            for d in $(find examples -name WORKSPACE -o -name MODULE.bazel -exec dirname {} \; ); do
            echo "::group::example: ${d}"
            (cd ${d} && echo "::group::build: ${d}" && bazel build //... );
            #(cd ${d} && test 1 -le $(bazel query 'kind("test", "//...")' 2> /dev/null | wc -l ) && echo "::group::test: ${d}" && bazel test //...);
            echo "::endgroup::"
            done
